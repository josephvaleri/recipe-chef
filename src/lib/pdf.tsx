import { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer'

export interface RecipeForPDF {
  title: string
  description?: string
  image?: string
  prepTime?: string
  cookTime?: string
  totalTime?: string
  servings?: string
  difficulty?: string
  cuisine?: string
  ingredients: Array<{
    amount?: string
    unit?: string
    name: string
  }>
  instructions: Array<{
    step: number
    text: string
  }>
  source?: string
  sourceUrl?: string
}

const styles = StyleSheet.create({
  page: {
    flexDirection: 'column',
    backgroundColor: '#FFFFFF',
    padding: 30,
    fontFamily: 'Helvetica',
  },
  header: {
    marginBottom: 20,
    textAlign: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#2D3748',
  },
  description: {
    fontSize: 12,
    color: '#4A5568',
    marginBottom: 10,
  },
  metadata: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginBottom: 20,
    padding: 10,
    backgroundColor: '#F7FAFC',
    borderRadius: 5,
  },
  metadataItem: {
    fontSize: 10,
    color: '#4A5568',
  },
  section: {
    marginBottom: 15,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#2D3748',
    borderBottom: '1pt solid #E2E8F0',
    paddingBottom: 5,
  },
  ingredient: {
    flexDirection: 'row',
    marginBottom: 5,
    fontSize: 11,
  },
  ingredientAmount: {
    width: 80,
    fontWeight: 'bold',
  },
  ingredientName: {
    flex: 1,
  },
  instruction: {
    flexDirection: 'row',
    marginBottom: 8,
    fontSize: 11,
  },
  instructionNumber: {
    width: 25,
    fontWeight: 'bold',
    color: '#4A5568',
  },
  instructionText: {
    flex: 1,
    lineHeight: 1.4,
  },
  footer: {
    marginTop: 30,
    paddingTop: 10,
    borderTop: '1pt solid #E2E8F0',
    fontSize: 8,
    color: '#718096',
    textAlign: 'center',
  },
})

export function generateRecipePDF(recipe: RecipeForPDF) {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Text style={styles.title}>{recipe.title}</Text>
          {recipe.description && (
            <Text style={styles.description}>{recipe.description}</Text>
          )}
        </View>

        <View style={styles.metadata}>
          {recipe.prepTime && (
            <Text style={styles.metadataItem}>Prep: {recipe.prepTime}</Text>
          )}
          {recipe.cookTime && (
            <Text style={styles.metadataItem}>Cook: {recipe.cookTime}</Text>
          )}
          {recipe.totalTime && (
            <Text style={styles.metadataItem}>Total: {recipe.totalTime}</Text>
          )}
          {recipe.servings && (
            <Text style={styles.metadataItem}>Serves: {recipe.servings}</Text>
          )}
          {recipe.difficulty && (
            <Text style={styles.metadataItem}>Difficulty: {recipe.difficulty}</Text>
          )}
          {recipe.cuisine && (
            <Text style={styles.metadataItem}>{recipe.cuisine}</Text>
          )}
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Ingredients</Text>
          {recipe.ingredients.map((ingredient, index) => (
            <View key={index} style={styles.ingredient}>
              <Text style={styles.ingredientAmount}>
                {ingredient.amount} {ingredient.unit}
              </Text>
              <Text style={styles.ingredientName}>{ingredient.name}</Text>
            </View>
          ))}
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Instructions</Text>
          {recipe.instructions.map((instruction) => (
            <View key={instruction.step} style={styles.instruction}>
              <Text style={styles.instructionNumber}>{instruction.step}.</Text>
              <Text style={styles.instructionText}>{instruction.text}</Text>
            </View>
          ))}
        </View>

        <View style={styles.footer}>
          <Text>
            Generated by Recipe Chef • {new Date().toLocaleDateString()}
            {recipe.sourceUrl && ` • Source: ${recipe.sourceUrl}`}
          </Text>
        </View>
      </Page>
    </Document>
  )
}
