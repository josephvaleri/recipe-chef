-- Community Phase 1: Create groups and related tables
-- 03_groups_core.sql

-- Create groups table
create table if not exists public.groups (
  group_id bigint generated by default as identity primary key,
  created_at timestamptz not null default now(),
  name text not null,
  slug text not null unique,
  category text not null check (category in ('cuisine','focus','identity')),
  description text,
  is_public boolean not null default true,
  owner_id uuid references public.profiles (user_id) on delete set null
);

-- Create group_members table
create table if not exists public.group_members (
  group_id bigint references public.groups (group_id) on delete cascade,
  profile_id uuid references public.profiles (user_id) on delete cascade,
  role text not null check (role in ('owner','mod','member')) default 'member',
  joined_at timestamptz not null default now(),
  primary key (group_id, profile_id)
);

-- Create group_cookbooks table (Phase 2 stub)
create table if not exists public.group_cookbooks (
  group_id bigint primary key references public.groups (group_id) on delete cascade,
  cookbook_id bigint unique references public.user_recipes (user_recipe_id) on delete set null,
  created_at timestamptz not null default now()
);

-- Add indexes for performance
create index if not exists idx_groups_category on public.groups(category);
create index if not exists idx_groups_slug on public.groups(slug);
create index if not exists idx_groups_owner on public.groups(owner_id);
create index if not exists idx_groups_public on public.groups(is_public) where is_public = true;

create index if not exists idx_group_members_profile on public.group_members(profile_id);
create index if not exists idx_group_members_group on public.group_members(group_id);
create index if not exists idx_group_members_role on public.group_members(role);

-- Add comments for clarity
comment on table public.groups is 'Community groups/clubs for users to join';
comment on table public.group_members is 'Membership table for groups';
comment on table public.group_cookbooks is 'Group-owned cookbooks (Phase 2 feature)';
